(self.webpackChunkpixelorama_docs=self.webpackChunkpixelorama_docs||[]).push([[912],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return p},kt:function(){return d}});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=o.createContext({}),l=function(e){var t=o.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=l(e.components);return o.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,u=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=l(r),d=n,f=m["".concat(u,".").concat(d)]||m[d]||s[d]||i;return r?o.createElement(f,a(a({ref:t},p),{},{components:r})):o.createElement(f,a({ref:t},p))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,a=new Array(i);a[0]=m;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:n,a[1]=c;for(var l=2;l<i;l++)a[l]=r[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6486:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return p},default:function(){return m}});var o=r(2122),n=r(9756),i=(r(7294),r(3905)),a=["components"],c={id:"source",title:"Compiling from Source"},u=void 0,l={unversionedId:"source",id:"source",isDocsHomePage:!1,title:"Compiling from Source",description:"To compile Pixelorama's source code, all you have to do is download Godot 3.1. You don't need the mono version since Pixelorama is written entirely with GDScript. Then, you clone Pixelorama from its GitHub repository, load the project within Godot, and you run it! Simple as that!",source:"@site/docs/source.md",sourceDirName:".",slug:"/source",permalink:"/Pixelorama-Docs/source",editUrl:"https://github.com/Orama-Interactive/Pixelorama-Docs/edit/master/docs/source.md",version:"current",lastUpdatedBy:"OverloadedOrama",lastUpdatedAt:1579399703,formattedLastUpdatedAt:"1/19/2020",frontMatter:{id:"source",title:"Compiling from Source"}},p=[],s={toc:p};function m(e){var t=e.components,r=(0,n.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"To compile Pixelorama's source code, all you have to do is download ",(0,i.kt)("a",{parentName:"p",href:"https://godotengine.org/download/"},"Godot 3.1"),". You don't need the mono version since Pixelorama is written entirely with GDScript. Then, you clone ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Orama-Interactive/Pixelorama"},"Pixelorama from its GitHub repository"),", load the project within Godot, and you run it! Simple as that!"))}m.isMDXComponent=!0}}]);